# Generated by Django 5.1.4 on 2025-01-13 01:59

import django.db.models.deletion
import simple_history.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("profiles", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalSoftskill",
            fields=[
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                (
                    "name",
                    models.CharField(db_index=True, max_length=60, verbose_name="name"),
                ),
                (
                    "deleted",
                    models.BooleanField(
                        blank=True, default=False, verbose_name="deleted"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="deleted at"
                    ),
                ),
                (
                    "deletion_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="deletion ip"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="created at"
                    ),
                ),
                (
                    "creation_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="creation ip"
                    ),
                ),
                (
                    "last_updated_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last update at"
                    ),
                ),
                (
                    "update_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="update ip"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                ("idx", models.BigIntegerField(default=1)),
                ("slug", models.SlugField(max_length=60)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="deleted by",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Habilidad Blanda",
                "verbose_name_plural": "historical Habilidades Blandas",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="description",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Defines the default order for displaying items system-wide.",
                        null=True,
                        verbose_name="order",
                    ),
                ),
                (
                    "deleted",
                    models.BooleanField(
                        blank=True, default=False, verbose_name="deleted"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="deleted at"
                    ),
                ),
                (
                    "deletion_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="deletion ip"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "creation_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="creation ip"
                    ),
                ),
                (
                    "last_updated_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last update at"
                    ),
                ),
                (
                    "update_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="update ip"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("idx", models.BigIntegerField(default=1)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_create_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_deleted_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="deleted by",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pregunta",
                "verbose_name_plural": "Preguntas",
                "ordering": ["-is_active", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Option",
            fields=[
                (
                    "deleted",
                    models.BooleanField(
                        blank=True, default=False, verbose_name="deleted"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="deleted at"
                    ),
                ),
                (
                    "deletion_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="deletion ip"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "creation_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="creation ip"
                    ),
                ),
                (
                    "last_updated_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last update at"
                    ),
                ),
                (
                    "update_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="update ip"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("idx", models.BigIntegerField(default=1)),
                (
                    "option",
                    models.CharField(
                        choices=[
                            ("STRONGLY_DISAGREE", "STRONGLY DISAGREE"),
                            ("DISAGREE", "DISAGREE"),
                            ("NEUTRAL", "NEUTRAL"),
                            ("AGREE", "AGREE"),
                            ("STRONGLY_AGREE", "STRONGLY AGREE"),
                        ],
                        max_length=20,
                        verbose_name="option",
                    ),
                ),
                ("grade", models.PositiveIntegerField(verbose_name="grade")),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_create_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_deleted_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="deleted by",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="updated by",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="options",
                        to="softskills.question",
                        verbose_name="question",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Questionnaire",
            fields=[
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                (
                    "deleted",
                    models.BooleanField(
                        blank=True, default=False, verbose_name="deleted"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="deleted at"
                    ),
                ),
                (
                    "deletion_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="deletion ip"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "creation_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="creation ip"
                    ),
                ),
                (
                    "last_updated_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last update at"
                    ),
                ),
                (
                    "update_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="update ip"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("idx", models.BigIntegerField(default=1)),
                (
                    "is_current",
                    models.BooleanField(default=True, verbose_name="is current"),
                ),
                (
                    "observations",
                    models.TextField(
                        blank=True, default="", null=True, verbose_name="observations"
                    ),
                ),
                (
                    "grade",
                    models.FloatField(blank=True, default=0.0, verbose_name="grade"),
                ),
                (
                    "attendee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="attendee_questionnaire",
                        to="profiles.profile",
                        verbose_name="attendee",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_create_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_deleted_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="deleted by",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cuestionario",
                "verbose_name_plural": "Cuestionarios",
                "ordering": ["-is_active", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="HistoricalAnswer",
            fields=[
                (
                    "deleted",
                    models.BooleanField(
                        blank=True, default=False, verbose_name="deleted"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="deleted at"
                    ),
                ),
                (
                    "deletion_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="deletion ip"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="created at"
                    ),
                ),
                (
                    "creation_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="creation ip"
                    ),
                ),
                (
                    "last_updated_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last update at"
                    ),
                ),
                (
                    "update_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="update ip"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                ("idx", models.BigIntegerField(default=1)),
                (
                    "grade",
                    models.FloatField(blank=True, default=0.0, verbose_name="grade"),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="deleted by",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="updated by",
                    ),
                ),
                (
                    "option",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="softskills.option",
                        verbose_name="option",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="softskills.question",
                        verbose_name="question",
                    ),
                ),
                (
                    "questionnaire",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="softskills.questionnaire",
                        verbose_name="questionnaire",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical answer",
                "verbose_name_plural": "historical answers",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="Answer",
            fields=[
                (
                    "deleted",
                    models.BooleanField(
                        blank=True, default=False, verbose_name="deleted"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="deleted at"
                    ),
                ),
                (
                    "deletion_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="deletion ip"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "creation_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="creation ip"
                    ),
                ),
                (
                    "last_updated_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last update at"
                    ),
                ),
                (
                    "update_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="update ip"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("idx", models.BigIntegerField(default=1)),
                (
                    "grade",
                    models.FloatField(blank=True, default=0.0, verbose_name="grade"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_create_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_deleted_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="deleted by",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="updated by",
                    ),
                ),
                (
                    "option",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="softskills.option",
                        verbose_name="option",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="softskills.question",
                        verbose_name="question",
                    ),
                ),
                (
                    "questionnaire",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="softskills.questionnaire",
                        verbose_name="questionnaire",
                    ),
                ),
            ],
            options={
                "verbose_name": "answer",
                "verbose_name_plural": "answers",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Softskill",
            fields=[
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                (
                    "name",
                    models.CharField(db_index=True, max_length=60, verbose_name="name"),
                ),
                (
                    "deleted",
                    models.BooleanField(
                        blank=True, default=False, verbose_name="deleted"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="deleted at"
                    ),
                ),
                (
                    "deletion_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="deletion ip"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "creation_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="creation ip"
                    ),
                ),
                (
                    "last_updated_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last update at"
                    ),
                ),
                (
                    "update_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="update ip"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("idx", models.BigIntegerField(default=1)),
                ("slug", models.SlugField(max_length=60, unique=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_create_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_deleted_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="deleted by",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Habilidad Blanda",
                "verbose_name_plural": "Habilidades Blandas",
                "ordering": ["-is_active", "-created_at"],
            },
        ),
        migrations.AddField(
            model_name="questionnaire",
            name="softskill",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="softskills.softskill",
                verbose_name="softskill",
            ),
        ),
        migrations.AddField(
            model_name="question",
            name="softskill",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="softskills.softskill",
                verbose_name="softskill",
            ),
        ),
        migrations.CreateModel(
            name="HistoricalSoftskillTraining",
            fields=[
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="description",
                    ),
                ),
                (
                    "deleted",
                    models.BooleanField(
                        blank=True, default=False, verbose_name="deleted"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="deleted at"
                    ),
                ),
                (
                    "deletion_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="deletion ip"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="created at"
                    ),
                ),
                (
                    "creation_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="creation ip"
                    ),
                ),
                (
                    "last_updated_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last update at"
                    ),
                ),
                (
                    "update_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="update ip"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                ("idx", models.BigIntegerField(default=1)),
                ("title", models.CharField(max_length=150, verbose_name="title")),
                ("link", models.CharField(max_length=255, verbose_name="link")),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="deleted by",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="updated by",
                    ),
                ),
                (
                    "softskill",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="softskills.softskill",
                        verbose_name="softskill",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Capacitación",
                "verbose_name_plural": "historical Capacitaciones",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalQuestionnaire",
            fields=[
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                (
                    "deleted",
                    models.BooleanField(
                        blank=True, default=False, verbose_name="deleted"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="deleted at"
                    ),
                ),
                (
                    "deletion_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="deletion ip"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="created at"
                    ),
                ),
                (
                    "creation_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="creation ip"
                    ),
                ),
                (
                    "last_updated_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last update at"
                    ),
                ),
                (
                    "update_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="update ip"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                ("idx", models.BigIntegerField(default=1)),
                (
                    "is_current",
                    models.BooleanField(default=True, verbose_name="is current"),
                ),
                (
                    "observations",
                    models.TextField(
                        blank=True, default="", null=True, verbose_name="observations"
                    ),
                ),
                (
                    "grade",
                    models.FloatField(blank=True, default=0.0, verbose_name="grade"),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "attendee",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="profiles.profile",
                        verbose_name="attendee",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="deleted by",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="updated by",
                    ),
                ),
                (
                    "softskill",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="softskills.softskill",
                        verbose_name="softskill",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Cuestionario",
                "verbose_name_plural": "historical Cuestionarios",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalQuestion",
            fields=[
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="description",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Defines the default order for displaying items system-wide.",
                        null=True,
                        verbose_name="order",
                    ),
                ),
                (
                    "deleted",
                    models.BooleanField(
                        blank=True, default=False, verbose_name="deleted"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="deleted at"
                    ),
                ),
                (
                    "deletion_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="deletion ip"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="created at"
                    ),
                ),
                (
                    "creation_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="creation ip"
                    ),
                ),
                (
                    "last_updated_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last update at"
                    ),
                ),
                (
                    "update_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="update ip"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                ("idx", models.BigIntegerField(default=1)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="deleted by",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="updated by",
                    ),
                ),
                (
                    "softskill",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="softskills.softskill",
                        verbose_name="softskill",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Pregunta",
                "verbose_name_plural": "historical Preguntas",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="SoftskillTraining",
            fields=[
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="description",
                    ),
                ),
                (
                    "deleted",
                    models.BooleanField(
                        blank=True, default=False, verbose_name="deleted"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="deleted at"
                    ),
                ),
                (
                    "deletion_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="deletion ip"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "creation_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="creation ip"
                    ),
                ),
                (
                    "last_updated_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last update at"
                    ),
                ),
                (
                    "update_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="update ip"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("idx", models.BigIntegerField(default=1)),
                ("title", models.CharField(max_length=150, verbose_name="title")),
                ("link", models.CharField(max_length=255, verbose_name="link")),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_create_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_deleted_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="deleted by",
                    ),
                ),
                (
                    "softskill",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="softskills.softskill",
                        verbose_name="softskill",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Capacitación",
                "verbose_name_plural": "Capacitaciones",
                "ordering": ["-is_active", "-created_at"],
            },
        ),
    ]
